Unit Tests - compile time, function run time, Memory Usage
Compile - time g++ whatever the compile is
Function Run Time - std::chrono or std::clock()
issues may arise with multi-threaded
understand at theory level
#include <time.h>

#ifndef SYSOUT_F
#define SYSOUT_F(f, ...)      _RPT1( 0, f, __VA_ARGS__ ) // For Visual studio
#endif

#ifndef speedtest__             
#define speedtest__(data)   for (long blockTime = NULL; (blockTime == NULL ? (blockTime = clock()) != NULL : false); SYSOUT_F(data "%.9fs", (double) (clock() - blockTime) / CLOCKS_PER_SEC))
#endif
Memory Usage - valgrind?
Probably not realistic but understand at theory level
Format -
file and hash
test file and hash
compile time

Function name
run time
memory usage

Function name
run time
memory usage
...

essentially I want a test that tests all effects of the
header code to make it the best implementation
across tests. It will average the same test on the same file,
but start new data points for 