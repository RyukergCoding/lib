Standard Library - (You can test different
implementations later  but trust that these
are probably the best)

C Library -

<cassert>
Macros:
std::assert
void assert(int expr); assert(a[7] == 7);
Can disable asserts by adding #define NDEBUG before the include

<cctype>
std::isalnum
std::isalpha
std::isblank
std::iscntrl
std::isdigit
std::isgraph
std::islower
std::isprint
std::ispunct
std::isspace
std::isupper
std::isxdigit
std::tolower
std::toupper

<cerrno>
std::errno

<cfenv>
std::

Containers -

<array>
Classes:
std::array

Functions:
std::begin
std::end


<vector>
std::vector

Queue - std::queue <queue>

Priority Queue - std::priority_queue <queue>

Double Ended Queue - std::deque <deque>

Singly Linked List - std::forward_list <forward_list>

Doubly Linked List - std::list <list>

Map - std::map <map>

Multi Map - std::multimap <map>

Set - std::set <set>

Multi Set - std::multiset <set>

Stack - std::stack <stack>

Unordered Map - std::unordered_map <unordered_map>

Unordered Multi Map - std::unordered_multimap <unordered_map>

Unordered Set - std::unordered_set <unordered_set>

Unordered Multi Set - std::unordered_multiset <unordered_set>

Input/Output - 

Multi-threading -

<atomic>

classes:
std::atomic
std::atomic_flag

types:
std::memory_order

<condition_variable>

<future>

<mutex>

<thread>
